@model List<Product>
@{
    ViewData["Title"] = "Product List";
}

<partial name="_NotificationPartial" />

<div class="container my-5">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex align-items-center">
            <h2 class="text-primary mb-0">
                <i class="bi bi-box-seam me-2"></i>Product List
            </h2>
            <div class="ms-4">
                <div class="input-group">
                    <input type="text" class="form-control" id="searchInput" placeholder="Search products...">
                    <span class="input-group-text">
                        <i class="bi bi-search"></i>
                    </span>
                </div>
            </div>
        </div>
        <a asp-controller="Product" asp-action="Upsert" class="btn btn-primary">
            <i class="bi bi-plus-circle-dotted me-2"></i>Create New Product
        </a>
    </div>

    <!-- Filter Section -->
    <div class="mb-4">
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-outline-secondary active" data-filter="all">All Products</button>
            @foreach (var category in Model.Select(p => p.Category.Name).Distinct())
            {
                <button type="button" class="btn btn-outline-secondary" data-filter="@category">@category</button>
            }
        </div>
    </div>

    <!-- Product Grid -->
    <div class="row g-4" id="productGrid">
        @foreach (var product in Model)
        {
            <div class="col-md-6 col-lg-4 product-card" data-category="@product.Category.Name">
                <div class="card h-100 shadow-sm product-hover">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <h5 class="card-title text-primary mb-0">@product.Name</h5>
                            <span class="badge bg-secondary">@product.Category.Name</span>
                        </div>

                        <p class="card-text text-muted mb-4">@product.Description</p>

                        <div class="d-flex justify-content-end mt-auto">
                            <a asp-controller="Product" asp-action="Upsert" asp-route-id="@product.Id"
                               class="btn btn-outline-primary btn-sm me-2">
                                <i class="bi bi-pencil-square"></i> Edit
                            </a>
                            <a asp-controller="Product" asp-action="Delete" asp-route-id="@product.Id"
                               class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-trash-fill"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .product-hover {
        transition: all 0.3s ease;
        border: 1px solid rgba(0,0,0,0.1);
    }

        .product-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,0.15) !important;
        }

    .btn-group .btn {
        border-radius: 20px !important;
        margin: 0 5px;
        padding: 0.375rem 1rem;
    }

        .btn-group .btn.active {
            background-color: var(--bs-primary);
            color: white;
            border-color: var(--bs-primary);
        }

    .badge {
        padding: 0.5em 1em;
        border-radius: 20px;
    }

    .card {
        border-radius: 10px;
    }

    #searchInput {
        border-radius: 20px 0 0 20px;
    }

    .input-group-text {
        border-radius: 0 20px 20px 0;
        background-color: white;
    }
</style>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const cards = document.querySelectorAll('.product-card');

            cards.forEach(card => {
                const text = card.textContent.toLowerCase();
                if(text.includes(searchTerm)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // Category filter functionality
        document.querySelectorAll('[data-filter]').forEach(button => {
            button.addEventListener('click', function() {
                // Update active state
                document.querySelectorAll('[data-filter]').forEach(btn => {
                    btn.classList.remove('active');
                });
                this.classList.add('active');

                const filterValue = this.getAttribute('data-filter');
                const cards = document.querySelectorAll('.product-card');

                cards.forEach(card => {
                    if (filterValue === 'all' || card.getAttribute('data-category') === filterValue) {
                        card.style.display = '';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        });
    </script>
}